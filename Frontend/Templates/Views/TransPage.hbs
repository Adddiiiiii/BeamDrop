<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BeamDrop</title>
    <link rel="stylesheet" href="../CSS/stylesTrans.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
</head>
<body class="homepage">
    <div class="ground">
         {{>header}}
        <main>
            <section class="transfer-section">
            <div class="transfer-header">
                <h2>Want To Transfer Files {{fullname}}?</h2>
                <p>Discover nearby devices to send files effortlessly.</p>
                <div class="transfer-buttons">
                    <button class="transfer-device-btn">Send Files</button>
                    <button class="receive-device-btn">Receive Files</button>
                    <button class="search-device-btn" id="scanDevicesBtn">Scan Devices</button>
                </div>
            </div>

            <div class="devices-section" id="devicesSection">
                <h3>Available Devices</h3>
                <!-- Devices will be listed here dynamically -->
            </div>
        </section>
            
            <script>
            const devicesSection = document.getElementById('devicesSection');
            const scanDevicesBtn = document.getElementById('scanDevicesBtn');

            // Handle file transfer and receiving
            const transferButtons = document.querySelectorAll('.transfer-device-btn');
            transferButtons.forEach(button => {
                button.addEventListener('click', () => {
                    window.location.href = '/TransUpload';
                });
            });

            const receiverButtons = document.querySelectorAll('.receive-device-btn');
            receiverButtons.forEach(button => {
                button.addEventListener('click', () => {
                    window.location.href = '/TransReceiver';
                });
            });

            // Bluetooth scanning using requestDevice
            scanDevicesBtn.addEventListener('click', async () => {
                try {
                    // Check if Bluetooth is supported by the browser
                    if (!navigator.bluetooth) {
                        alert('Web Bluetooth API is not available in this browser.');
                        return;
                    }

                    // Requesting available Bluetooth devices
                    const device = await navigator.bluetooth.requestDevice({
                        acceptAllDevices: true
                    });

                    // Display the discovered device in the devices section
                    const deviceName = device.name || 'Unknown Device';
                    const deviceCard = `
                        <div class="device-card">
                            <span>${deviceName}</span>
                            <button class="transfer-device-btn">Transfer</button>
                        </div>
                    `;
                    devicesSection.insertAdjacentHTML('beforeend', deviceCard);

                } catch (error) {
                    console.error('Error during Bluetooth scanning:', error);
                    alert('Failed to start Bluetooth scanning. Ensure that the page is served over HTTPS.');
                }
            });
        </script>
        </main>
        {{>footer}}
    </div>
</body>
</html>
